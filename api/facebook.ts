import type { VercelRequest, VercelResponse } from "@vercel/node";
import axios from "axios";
import crypto from "crypto";

export default async function handler(req: VercelRequest, res: VercelResponse) {
  console.log("üîπ –ó–∞–ø—Ä–æ—Å –ø—Ä–∏—à–µ–ª:", req.body); // –õ–æ–≥ –∑–∞–ø—Ä–æ—Å–∞
  console.log("Method:", req.method);
  console.log("Body:", req.body);

  if (req.method !== "POST") {
    return res.status(405).json({ error: "–ú–µ—Ç–æ–¥ –Ω–µ —Ä–∞–∑—Ä–µ—à–µ–Ω" });
  }

  res.setHeader("Access-Control-Allow-Origin", "*");
  res.setHeader("Access-Control-Allow-Methods", "POST, OPTIONS");
  res.setHeader("Access-Control-Allow-Headers", "Content-Type");


  try {
    const { event_name, event_data } = req.body;

    // –•—ç—à–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è Facebook Pixel
    const hashedData = {
      fn: crypto.createHash("sha256").update(event_data.fn || "").digest("hex"),
      ph: crypto.createHash("sha256").update(event_data.ph || "").digest("hex"),
    };

    console.log("üîπ –•—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:", hashedData); // –õ–æ–≥ —Ö—ç—à–µ–π

    const pixelResponse = await axios.post(
      `https://graph.facebook.com/v18.0/${process.env.VITE_FACEBOOK_PIXEL_ID}/events`,
      {
        data: [
          {
            event_name,
            event_time: Math.floor(Date.now() / 1000),
            user_data: hashedData,
          },
        ],
        access_token: process.env.VITE_FACEBOOK_ACCESS_TOKEN,
      }
    );

    console.log("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç Facebook:", pixelResponse.data); // –õ–æ–≥ —É—Å–ø–µ—à–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞

    return res.status(200).json({ success: true });
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–±—ã—Ç–∏—è –≤ Facebook:", error.response?.data || error.message);
    return res.status(500).json({ error: "–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–±—ã—Ç–∏—è" });
  }
}